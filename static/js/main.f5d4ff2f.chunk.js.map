{"version":3,"sources":["components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpensesFilter","selected","onChangeFilter","className","value","onChange","e","target","ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","Card","classes","children","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","label","maxValue","barFillHeight","Math","round","style","height","Chart","dataPoints","dataPointValues","dataPoint","totalMaximum","max","ExpensesChart","filteredExpenses","chartDatapoints","getMonth","Expenses","useState","filteredYear","setFilteredYear","sort","a","b","filter","Number","selectedYear","ExpenseForm","onSaveExpenseData","onCancel","enteredTitle","enteredAmount","enteredDate","userInput","setUserInput","onSubmit","preventDefault","expenseData","Date","prevState","type","min","step","onClick","NewExpense","onAddExpense","isEditing","setIsEditing","enteredExpenseData","random","toString","initialExpenses","App","expenses","setExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f5d4ff2f.chunk.js","sourcesContent":["import './ExpensesFilter.css';\n\nconst ExpensesFilter = ({ selected, onChangeFilter }) => {\n  const dropdownChangeHandler = (e) => {\n    onChangeFilter(e.target.value);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={selected} onChange={dropdownChangeHandler}>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import './Card.css';\n\nconst Card = (props) => {\n  const classes = 'card ' + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\n\nimport './ExpenseItem.css';\n\nconst ExpenseItem = (props) => {\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        <div className=\"expense-item__description\">\n          <h2>{props.title}</h2>\n          <div className=\"expense-item__price\">${props.amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import ExpenseItem from './ExpenseItem';\n\nimport './ExpensesList.css';\n\nconst ExpensesList = ({ items }) => {\n  if (items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">No expenses found.</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {items.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import './ChartBar.css';\n\nconst ChartBar = ({ label, maxValue, value }) => {\n  let barFillHeight = '0%';\n\n  if (maxValue > 0) {\n    barFillHeight = Math.round((value / maxValue) * 100) + '%';\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import ChartBar from './ChartBar';\n\nimport './Chart.css';\n\nconst Chart = ({ dataPoints }) => {\n  const dataPointValues = dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className=\"chart\">\n      {dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import Chart from '../Chart/Chart';\n\nconst ExpensesChart = ({ filteredExpenses }) => {\n  const chartDatapoints = [\n    {\n      label: 'Jan',\n      value: 0,\n    },\n    {\n      label: 'Feb',\n      value: 0,\n    },\n    {\n      label: 'Mar',\n      value: 0,\n    },\n    {\n      label: 'Apr',\n      value: 0,\n    },\n    {\n      label: 'May',\n      value: 0,\n    },\n    {\n      label: 'Jun',\n      value: 0,\n    },\n    {\n      label: 'Jul',\n      value: 0,\n    },\n    {\n      label: 'Aug',\n      value: 0,\n    },\n    {\n      label: 'Sep',\n      value: 0,\n    },\n    {\n      label: 'Oct',\n      value: 0,\n    },\n    {\n      label: 'Nov',\n      value: 0,\n    },\n    {\n      label: 'Dec',\n      value: 0,\n    },\n  ];\n\n  for (let expense of filteredExpenses) {\n    let expenseMonth = expense.date.getMonth();\n    chartDatapoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDatapoints} />;\n};\n\nexport default ExpensesChart;\n","import { useState } from 'react';\n\nimport ExpensesFilter from './ExpensesFilter';\nimport ExpensesList from './ExpensesList';\nimport ExpensesChart from './ExpensesChart';\nimport Card from '../UI/Card';\n\nimport './Expenses.css';\n\nconst Expenses = ({ items }) => {\n  const [filteredYear, setFilteredYear] = useState('2021');\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  const sortedExpenses = items.sort((a, b) => {\n    return b.date - a.date;\n  });\n\n  const filteredExpenses = sortedExpenses.filter(\n    (expense) => expense.date.getFullYear() === Number(filteredYear)\n  );\n\n  return (\n    <Card className=\"expenses\">\n      <ExpensesFilter\n        selected={filteredYear}\n        onChangeFilter={filterChangeHandler}\n      />\n      <ExpensesChart filteredExpenses={filteredExpenses} />\n      <ExpensesList items={filteredExpenses} />\n    </Card>\n  );\n};\n\nexport default Expenses;\n","import { useState } from 'react';\n\nimport './ExpenseForm.css';\n\nconst ExpenseForm = ({ onSaveExpenseData, onCancel }) => {\n  const [userInput, setUserInput] = useState({\n    enteredTitle: '',\n    enteredAmount: '',\n    enteredDate: '',\n  });\n\n  const titleChangeHandler = (e) => {\n    setUserInput((prevState) => ({\n      ...prevState,\n      enteredTitle: e.target.value,\n    }));\n  };\n\n  const amountChangeHandler = (e) => {\n    setUserInput((prevState) => ({\n      ...prevState,\n      enteredAmount: e.target.value,\n    }));\n  };\n\n  const dateChangeHandler = (e) => {\n    setUserInput((prevState) => ({\n      ...prevState,\n      enteredDate: e.target.value,\n    }));\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const expenseData = {\n      title: userInput.enteredTitle,\n      amount: userInput.enteredAmount,\n      date: new Date(userInput.enteredDate),\n    };\n    onSaveExpenseData(expenseData);\n    setUserInput((prevState) => ({\n      ...prevState,\n      enteredTitle: '',\n      enteredAmount: '',\n      enteredDate: '',\n    }));\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            value={userInput.enteredTitle}\n            onChange={titleChangeHandler}\n            type=\"text\"\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            value={userInput.enteredAmount}\n            onChange={amountChangeHandler}\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            value={userInput.enteredDate}\n            onChange={dateChangeHandler}\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button onClick={onCancel} type=\"button\">\n          Cancel\n        </button>\n        <button type=\"submit\">Add expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import { useState } from 'react';\nimport ExpenseForm from './ExpenseForm';\n\nimport './NewExpense.css';\n\nconst NewExpense = ({ onAddExpense }) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    onAddExpense(expenseData);\n    setIsEditing(false);\n  };\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && (\n        <button onClick={startEditingHandler}>Add new expense</button>\n      )}\n      {isEditing && (\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseDataHandler}\n          onCancel={stopEditingHandler}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import { useState } from 'react';\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst initialExpenses = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(initialExpenses);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevState) => {\n      return [...prevState, expense];\n    });\n  };\n\n  // return React.createElement(\n  //   'div',\n  //   {},\n  //   React.createElement('h2', {}, 'React create element'),\n  //   React.createElement(Expenses, { items: expenses })\n  // );\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}